00000400 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 4/9/2017 9:01:05 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Homework Set #1, Q3
00000000                             3  * Written by : Dwina Solihin    
00000000                             4  * Date       : January 14, 2017
00000000                             5  * Description: Question 3 of Homework
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  *-- Beginning of EQUates section (similar to #define in C)--
00000000                             9  *-----------------------------------------------------------
00000000  =00004000                 10  addr1       EQU     $4000
00000000  =00004001                 11  addr2       EQU     $4001
00000000  =0000A7FF                 12  data2       EQU     $A7FF
00000000  =00005555                 13  data3       EQU     $5555
00000000  =00000000                 14  data4       EQU     $0000
00000000  =00001246                 15  data5       EQU     4678
00000000  =0000004F                 16  data6       EQU     %01001111
00000000  =00000017                 17  data7       EQU     %00010111
00000000                            18  
00000000                            19  *------------------------------------------------------------
00000000                            20  
00000000                            21  *Beginning of code segment. This is the assembly language instructions.
00000000                            22  *-----------------------------------------------------------
00000400                            23              ORG     $400            *This psudo op code tells the assembler here
00000400                            24                                      *that the program will run in memory. 
00000400                            25         
00000400  303C A7FF                 26  start       MOVE.W      #data2,D0   *Load D0
00000404  123C 004F                 27              MOVE.B      #data6,D1   *Load D1
00000408  143C 0017                 28              MOVE.B      #data7,D2   *Load D2
0000040C  363C 5555                 29              MOVE.W      #data3,D3   *Load D3
00000410                            30              
00000410  307C 4000                 31              MOVEA.W     #addr1,A0   *Load address register 
00000414                            32                 
00000414  10C1                      33              MOVE.B      D1,(A0)+    *Transfer byte to memory
00000416  10C2                      34              MOVE.B      D2,(A0)+    *Transfer second byte to memory
00000418                            35              
00000418  327C 4000                 36              MOVEA.W     #addr1,A1   *Load address
0000041C                            37              
0000041C  C751                      38              AND.W       D3,(A1)     *Logical AND
0000041E                            39      
0000041E                            40  *-----------------------------------------------------------
0000041E                            41  
0000041E                            42  *------ Next instruction shows how a label is used. --------
0000041E                            43  *-----------------------------------------------------------
0000041E  4EF8 0400                 44              JMP         start       *This instruction keeps the program
00000422                            45                                      *looping forever. 
00000422                            46  
00000422                            47              END         $400        *This pseudo op-code tells tells the assembler 

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDR1               4000
ADDR2               4001
DATA2               A7FF
DATA3               5555
DATA4               0
DATA5               1246
DATA6               4F
DATA7               17
START               400
